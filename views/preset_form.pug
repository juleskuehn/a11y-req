extends item_form

mixin fpsCheckbox(item, selected)
  .checkbox
    label(for=item.id)
      input(id=item.id type='checkbox' name='clauses' value=item.id class=item.informative ? 'informative' : '' disabled=item.informative checked=selected)
      | #{item.number} #{item.name}

mixin createTree(tree)
  each clauseNode in tree
    -var selected = itemExists && item.clauses.indexOf(clauseNode.clause.id) > -1 ? 'checked' : false
    if clauseNode.children.length === 0
      .leafNode
        +fpsCheckbox(clauseNode.clause, selected)
    else
      details
        summary
          +fpsCheckbox(clauseNode.clause, selected)
        +createTree(clauseNode.children)
        
block form
  -var itemExists = item!==undefined

  form(method='POST' action='')
    .form-group
      label.required(for='name')
        span.field-name Commodity name (English) 
        strong.required (required)
      input#name.form-control(type='text' placeholder='' required='required' name='name' value=(itemExists ? item.name : ''))
    .form-group
      label.required(for='frName')
        span.field-name Commodity name (French) 
        strong.required (required)
      input#frName.form-control(lang='fr' type='text' placeholder='' required='required' name='frName' value=(itemExists ? item.frName : ''))
    .form-group
      label(for='description')
        span.field-name Description (English)
      textarea#bodyHtml.form-control(name='description' rows='3')
        if itemExists
          | #{item.description}
    .form-group
      label(for='frDescription')
        span.field-name Description (French)
      textarea#frBodyHtml.form-control(lang='fr' name='frDescription' rows='3')
        if itemExists
          | #{item.frDescription}
    .form-group
      label(for='order')
        span.field-name Order (1 comes before 2, etc.)
      input#order.form-control(type='text' placeholder='' name='order' value=(itemExists ? item.order : ''))


    .btn-group
      button.btn.btn-default#selectAll Select all 
      button.btn.btn-default#selectNone Select none

    fieldset#clauses
      //- legend.required
      legend.wb-inv
        span.field-name.wb-inv Select clauses to include 
        //- strong.required (required)
      .clause_tree
        +createTree(item_tree)
      
    button.btn.btn-primary(type='submit') Submit